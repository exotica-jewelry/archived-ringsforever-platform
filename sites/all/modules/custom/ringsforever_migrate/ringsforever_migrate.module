<?php
/**
 * @file
 * Provides TitaniumRingsForever.com product types and related
 * functionality.
 */

include_once 'ringsforever_migrate.features.inc';

/**
 * Implements hook_migrate_api().
 */
function ringsforever_migrate_migrate_api() {
  $api = array(
    'api' => 2,
    'migrations' => array(
      'CommerceKickstartRings' => array('class_name' => 'CommerceKickstartRings'),
      'CommerceKickstartCollection' => array('class_name' => 'CommerceKickstartCollection'),
      'CommerceKickstartElements' => array('class_name' => 'CommerceKickstartElements'),
      'CommerceKickstartFeaturing' => array('class_name' => 'CommerceKickstartFeaturing'),
    ),
  );
  $types = array(
    'rings',
  );
  foreach ($types as $type) {
    $api['migrations']['CommerceKickstartNode' . $type] = array('class_name' => 'CommerceKickstartNode', 'type' => $type);
  }
  return $api;
}

/**
 * Implements hook_commerce_kickstart_crumb_info().
 *
 * Enables the Crumbs plugin relevant to this module that provides taxonomy
 * based breadcrumbs for each product display node.
 */
function ringsforever_migrate_commerce_kickstart_crumb_info() {
  return array(
    'taxonomy.termReference.field_collection.node.*',
  );
}

/**
 * Implements hook_commerce_product_type_info_alter().
 */
function commerce_product_commerce_product_type_info_alter(&$product_types) {
  // Remove the default product type.
  unset($product_types['product']);
}

/**
 * Implements hook_block_info_alter().
 */
function ringsforever_migrate_block_info_alter(&$blocks, $theme, $code_blocks) {
  //  Provide a default label for the facetapi blocks.
  if (isset($blocks['facetapi']['0ipnwlXipzrm39vOO6k11dGc0FQlH9sg']) && empty($blocks['facetapi']['0ipnwlXipzrm39vOO6k11dGc0FQlH9sg']['title'])) {
    $blocks['facetapi']['0ipnwlXipzrm39vOO6k11dGc0FQlH9sg']['title'] = t('Width');
  }
}
